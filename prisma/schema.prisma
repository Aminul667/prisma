generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  content      String
  published    Boolean        @default(false)
  authorId     Int // not unique as one user can post multiple posts or articles. one to many
  author       User           @relation(fields: [authorId], references: [id])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  postCategory PostCategory[]

  @@map("posts")
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  email    String   @unique
  role     UserRole @default(user)
  profile  Profile? // one to one relation
  post     Post[]

  @@map("users")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique // foreign key
  user   User    @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String
  postCategory PostCategory[]

  @@map("categories")
}

// for many to many relation, a third table is needed for maintaining the relation. Intermediate table do not have a primary key, it has composite key
model PostCategory {
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([postId, categoryId])
  @@map("post_category")
}

enum UserRole {
  user
  admin
}
